// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nursery.Infrastructure.DBContext;

#nullable disable

namespace Nursery.Infrastructure.Migrations
{
    [DbContext(typeof(NurseryDbContext))]
    [Migration("20240926105337_jk")]
    partial class jk
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Nursery_Domin.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Nursery_Domin.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSeld")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InvoiceId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Nursery_Domin.Models.Kind", b =>
                {
                    b.Property<int>("KindId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KindId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("KindName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SectorId")
                        .HasColumnType("int");

                    b.HasKey("KindId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SectorId");

                    b.ToTable("Kinds");
                });

            modelBuilder.Entity("Nursery_Domin.Models.Plant", b =>
                {
                    b.Property<int>("PlantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlantId"));

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DisposalDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("kindId")
                        .HasColumnType("int");

                    b.HasKey("PlantId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("kindId");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("Nursery_Domin.Models.Sector", b =>
                {
                    b.Property<int>("SectorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SectorId"));

                    b.Property<string>("SectorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SectorId");

                    b.ToTable("Sectors");
                });

            modelBuilder.Entity("Nursery_Domin.Models.Kind", b =>
                {
                    b.HasOne("Nursery_Domin.Models.Category", "Category")
                        .WithMany("kinds")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nursery_Domin.Models.Sector", "Sector")
                        .WithMany("kinds")
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("Nursery_Domin.Models.Plant", b =>
                {
                    b.HasOne("Nursery_Domin.Models.Invoice", null)
                        .WithMany("Plants")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("Nursery_Domin.Models.Kind", "kind")
                        .WithMany("Plants")
                        .HasForeignKey("kindId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("kind");
                });

            modelBuilder.Entity("Nursery_Domin.Models.Category", b =>
                {
                    b.Navigation("kinds");
                });

            modelBuilder.Entity("Nursery_Domin.Models.Invoice", b =>
                {
                    b.Navigation("Plants");
                });

            modelBuilder.Entity("Nursery_Domin.Models.Kind", b =>
                {
                    b.Navigation("Plants");
                });

            modelBuilder.Entity("Nursery_Domin.Models.Sector", b =>
                {
                    b.Navigation("kinds");
                });
#pragma warning restore 612, 618
        }
    }
}
